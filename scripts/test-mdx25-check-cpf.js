#!/usr/bin/env node

/**
 * Script para testar a verifica√ß√£o de CPF do MDX25
 */

// Carregar vari√°veis de ambiente
require("dotenv").config();

console.log("üß™ Testando verifica√ß√£o de CPF MDX25...\n");

// Fun√ß√£o para testar verifica√ß√£o de CPF
async function testMDX25CheckCPF() {
  try {
    console.log("üì¶ Testando verifica√ß√£o de CPF MDX25...");

    // Testar com um CPF que provavelmente n√£o existe
    const testCPF = "123.456.789-00";

    const response = await fetch("http://localhost:3000/api/mdx25/check-cpf", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ cpf: testCPF }),
    });

    if (!response.ok) {
      throw new Error(`HTTP ${response.status}: ${response.statusText}`);
    }

    const data = await response.json();
    console.log("‚úÖ Resposta da API:", data);

    return true;
  } catch (error) {
    console.log(`‚ùå Erro na verifica√ß√£o de CPF: ${error.message}`);
    return false;
  }
}

// Fun√ß√£o para testar verifica√ß√£o de CPF normal
async function testNormalCheckCPF() {
  try {
    console.log("üì¶ Testando verifica√ß√£o de CPF normal...");

    // Testar com um CPF que provavelmente n√£o existe
    const testCPF = "123.456.789-00";

    const response = await fetch("http://localhost:3000/api/check-cpf", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ cpf: testCPF }),
    });

    if (!response.ok) {
      throw new Error(`HTTP ${response.status}: ${response.statusText}`);
    }

    const data = await response.json();
    console.log("‚úÖ Resposta da API normal:", data);

    return true;
  } catch (error) {
    console.log(`‚ùå Erro na verifica√ß√£o de CPF normal: ${error.message}`);
    return false;
  }
}

// Fun√ß√£o principal
async function main() {
  console.log("üöÄ Iniciando teste de verifica√ß√£o de CPF...\n");

  // Testar verifica√ß√£o MDX25
  const mdx25Ok = await testMDX25CheckCPF();

  console.log("");

  // Testar verifica√ß√£o normal
  const normalOk = await testNormalCheckCPF();

  // Resultado final
  console.log("\nüéØ RESULTADO FINAL:");
  console.log(`‚úÖ MDX25 Check CPF: ${mdx25Ok ? "OK" : "FALHOU"}`);
  console.log(`‚úÖ Normal Check CPF: ${normalOk ? "OK" : "FALHOU"}`);

  if (mdx25Ok && normalOk) {
    console.log("\nüéâ Todos os testes passaram!");
  } else {
    console.log(
      "\n‚ö†Ô∏è  Alguns testes falharam. Verifique os logs acima para mais detalhes."
    );
  }
}

// Executar se chamado diretamente
if (require.main === module) {
  main().catch(console.error);
}

module.exports = { testMDX25CheckCPF, testNormalCheckCPF };
